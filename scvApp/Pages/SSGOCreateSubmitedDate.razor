@page "/SSGO/Submited-date/{submitId}";

@inject NavigationManager NavManager;
@inject IJSRuntime JsRuntime;

@inject Services.IDateService dateservice;
@inject Services.ISubmitService submitservice;
@inject Services.ITeacherService teacherservice;

@using Models

<nav class="navbar-master">
    <div class="container">
        <a href="/SSGO/Submited-dates" class="left-button"><div style="margin-top: 12px;">POJDI<br />NAZAJ</div></a>
        <a class="welcome-container">PRIJAVLJENI TERMIN</a>
    </div>
</nav>

<div class="fullscreen" style="background-color: #a9d046">
    <div class="client-form">
        <form onsubmit="@CheckSubmit">
            <table style="width: 100%;">
                <tr>
                    <td class="left-td-client" style="width: 30%;">
                        <input type="text" class="textbox" @bind="submit.Firstname" id="firstname" readonly />
                        <label class="input-label" for="firstname">Ime</label>
                        <br />
                        <input type="text" class="textbox" @bind="submit.Surname" id="surname" readonly />
                        <label class="input-label" for="surname">Priimek</label>
                        <br />
                        <input type="email" class="textbox" @bind="submit.Email" id="email" readonly />
                        <label class="input-label" for="email">E-pošta</label>
                        <br />
                        <input type="text" class="textbox" @bind="submit.PhoneNumber" id="phonenumber" readonly />
                        <label class="input-label" for="phonenumber">Telefonska številka</label>
                        <br />
                        <input type="text" class="textbox" @bind="submit.SchoolTitle" id="schooltitle" readonly />
                        <label class="input-label" for="schooltitle">Naziv šole</label>
                        <br />
                        <input type="text" class="textbox" @bind="submit.Address" id="address" readonly />
                        <label class="input-label" for="address">Naslov šole</label>
                    </td>
                    <td class="right-td-client" style="width: 30%;">
                        <input type="number" class="textbox" min="5" max="9" @bind="submit.Class" id="class" readonly />
                        <label class="input-label" for="class">Razrednja stopnja</label>
                        <br />
                        <input type="text" class="textbox" @bind="date.Term" id="term" readonly>
                        <label class="input-label" for="term">Termin</label>
                        <br />
                        <input type="number" id="numberofstudents" min="0" class="textbox" @bind="submit.NumberOfStudents" readonly />
                        <label class="input-label" for="numberofstudents">Število učencev</label>
                        <table style="width:100%;">
                            <tr>
                                <td>
                                    <input type="time" class="textbox" readonly @bind="submit.Start" id="start" />
                                    <label class="input-label" for="start">Začetek</label>
                                </td>
                                <td>
                                    <input type="time" class="textbox" readonly @bind="submit.End" id="end" />
                                    <label class="input-label" for="end">Konec</label>
                                </td>
                            </tr>
                        </table>
                        <input type="time" class="textbox" @bind="submit.Break" id="break" readonly />
                        <label class="input-label" for="break">Odmor</label>
                        <br />

                        <input type="text" class="textbox" @bind="submit.Type" id="type" readonly>
                        <label class="input-label" for="type">Lokacija ogleda</label>

                    </td>
                    <td class="right-td-client" style="width: 30%;">
                        <div style="margin: 0 auto; text-align: left;">
                            <button style="background-color: #a9d046; height: 75px; width: 75px; border: 0px;" type="button">
                                <img src="https://www.scv.si/wp-content/themes/yoo_master2_wp/images/ssgo.svg" style="width: 50px;"><div>@ers</div>
                            </button>

                            <select class="textbox" @bind="Name" style="width: calc(100% - 90px); margin-top: -25px; vertical-align: middle;" id="teacher" required>

                                @foreach (var varteacher in ssgoteachers)
                                {
                                    <option>@varteacher.Title @varteacher.Firstname.Substring(0, 1). @varteacher.Surname</option>
                                }
                            </select>
                            <label class="input-label" style="left: 75px;" for="teacher">Predstavni učitelj</label>
                        </div>
                    </td>
                </tr>
            </table>
            <textarea style="height: 100px; resize: none;" class="textbox" placeholder="Note" @bind="submit.Note" readonly></textarea>
            <button type="submit" class="login-button-client" formaction="/Thank-you">SHRANI</button>
        </form>
    </div>
</div>

@code
{
    [Parameter]
    public string submitId { get; set; }

    string ers, ssd, gim, ssgo, Name = "";

    Date date = new Date();
    Submit submit = new Submit();
    Teacher teacher = new Teacher();
    List<Date> dates = new List<Date>();
    List<Submit> submits = new List<Submit>();
    List<Teacher> teachers = new List<Teacher>();
    List<Teacher> ssgoteachers = new List<Teacher>();

    protected override async Task OnInitializedAsync()
    {
        if (submitId == "0")
        {
            date.Term = DateOnly.Parse(DateTime.Today.ToShortDateString());
        }
        else
        {
            dates = await dateservice.GetAllDates();
            submits = await submitservice.GetAllSubmits();
            teachers = await teacherservice.GetAllTeachers();

            ssgoteachers = teachers.Where(varteacher => varteacher.SchoolId == 3).ToList();

            submit = submits.FirstOrDefault(varsubmit => varsubmit.Id.ToString() == submitId);
            date = dates.FirstOrDefault(vardate => vardate.Id == submit.Date);
        }
    }

    public async Task CheckSubmit()
    {
        await dateservice.UpdateDate(date);
        await submitservice.UpdateSubmit(submit);

        date = new Date();
        submit = new Submit();
        NavManager.NavigateTo("/SSGO/Submited-dates");
    }
}