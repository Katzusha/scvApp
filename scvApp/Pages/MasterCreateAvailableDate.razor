@page "/Create-Date/{dateId}";

@inject NavigationManager NavManager;
@inject IJSRuntime JsRuntime;

@inject Services.IDateService dateservice;

@using Models

<nav class="navbar-master">
    <div class="container">
        <a href="/Master/All-dates" class="left-button"><div style="margin-top: 12px;">POJDI<br />NAZAJ</div></a>
        <a class="welcome-container">USTVARI NOV TERMIN</a>
    </div>
</nav>

<div class="fullscreen" style="background-color: #ed1164">
    <div class="login-form">
        <form onsubmit="@CheckSubmit">
            <input type="date" placeholder="Datum" class="textbox" @bind=date.Term><br>
            <input type="time" placeholder="Ura" class="textbox" @bind=date.Start><br>
            <input type="number" placeholder="Max število učencev" class="textbox" @bind=date.MaxNumberOfStudents><br>
            <button type="submit" formaction="/Master/Submited-dates" class="login-button">Ustvari</button>
        </form>
    </div>
</div>

@code 
{
    [Parameter]
    public string dateId { get; set; }

    Date date = new Date();
    List<Date> dates = new List<Date>();

    protected override async Task OnInitializedAsync()
    {
        if (dateId == "0")
        {
            date.Term = DateOnly.Parse(DateTime.Today.ToShortDateString());
        }
        else
        {
            dates = await dateservice.GetAllDates();

            date = dates.FirstOrDefault(vardate => vardate.Id.ToString() == dateId);
        }
    }

    public async Task CheckSubmit()
    {
        if (dateId == "0")
        {
            await dateservice.AddNewDate(date);

            date = new Date();
            NavManager.NavigateTo("/Master/All-dates");
        }
        else
        {
            await dateservice.UpdateDate(date);

            date = new Date();
            NavManager.NavigateTo("/Master/All-dates");
        }
    }
}