@page "/Master/All-dates";

@inject Services.IDateService dateservice;
@inject Services.ISubmitService submitservice;
@inject NavigationManager NavManager;
@inject IJSRuntime JsRuntime;
@using Models

<nav class="navbar-master">
    <div class="container">
        <a href="/Master/Submited-dates" class="left-button"><div style="margin-top: 12px;">PRIJAVLJENI<br />TERMINI</div></a>
        <a  class="welcome-container">VSI TERMINI</a>
        <a class="right-button" href="/Master/Sub-admins"><div style="margin-top: 12px; margin-left: -170px;">POD<br />ADMINI</div></a>
    </div>
</nav>

<div class="fullscreen" style="background-color: #ed1164">
    <div class="fullscreen-table">
        <table>
            <tr>
                <th style="width: calc(100% / 4);">DATUM</th>
                <th style="width: calc(100% / 4);">URA</th>
                <th style="width: calc(100% / 4);">MAX ŠTEVILO UČENCEV</th>
                <th style="width: calc(100% / 4);">JE ZASEDEN</th>
            </tr>
            <tr>
                <td colspan="4"><a class="add-button" onclick="@CreateNewRow">NOV TERMIN</a></td>
            </tr>
            @foreach (var date in dates)
            {
                @if (submits.Any(submit => submit.Date == date.Id) == true)
                {
                    <tr class="td-row" onclick="@EditTakenRow">
                        <td><p style="border-radius: 15px 0px 0px 15px;">@date.Term.ToString()</p></td>
                        <td><p>@date.Start.ToString()</p></td>
                        <td><p>@date.MaxNumberOfStudents.ToString()</p></td>
                        <td><p style="border-radius: 0px 15px 15px 0px;">Zaseden</p></td>
                    </tr>
                }
                else
                {
                    <tr class="td-row" @onclick="(() => EditFreeRow(date.Id.ToString()))">
                        <td><p style="border-radius: 15px 0px 0px 15px;">@date.Term.ToString()</p></td>
                        <td><p>@date.Start.ToString()</p></td>
                        <td><p>@date.MaxNumberOfStudents.ToString()</p></td>
                        <td><p style="border-radius: 0px 15px 15px 0px;">Prost</p></td>
                    </tr>
                }
            }
        </table>
    </div>
</div>

@code
{
    string dateId = "0";
    List<Date> dates = new List<Date>();
    List<Submit> submits = new List<Submit>();
    protected override async Task OnInitializedAsync()
    {
        dates = await dateservice.GetAllDates();
        submits = await submitservice.GetAllSubmits();
    }

    public async void EditTakenRow()
    {
        await JsRuntime.InvokeVoidAsync("alert", "This date is already taken so please delete the submit before editing the date!");
    }

    public async void CreateNewRow()
    {
        NavManager.NavigateTo($"/Create-Date/{dateId}");
    }

    public async void EditFreeRow(string Id)
    {
        NavManager.NavigateTo($"/Create-Date/{Id}");
    }
}