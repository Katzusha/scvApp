@page "/Create-User/{adminId}";

@inject NavigationManager NavManager;
@inject IJSRuntime JsRuntime;

@inject Services.IAdminService adminservice;
@inject Services.ISchoolService schoolservice;
@using Models;

<nav class="navbar-master">
    <div class="container">
        <a href="/Master/Sub-admins" class="left-button"><div style="margin-top: 12px;">POJDI<br />NAZAJ</div></a>
        <a class="welcome-container">USTVARI NOVEGA UPORABNIKA</a>
    </div>
</nav>

<div class="fullscreen" style="background-color: #ed1164">
    <div class="login-form">
        <form onsubmit="@CheckSubmit">
            <input type="text" id="firstname" class="textbox" @bind=admin.Firstname>
            <label class="input-label" for="firstname">Ime</label>
            <br>
            <input type="text" id="surname" class="textbox" @bind=admin.Surname>
            <label class="input-label" for="surname">Priimek</label>
            <br>
            <input type="text" id="title" class="textbox" @bind=admin.Title>
            <label class="input-label" for="title">Naziv</label>
            <br>
            <input type="email" id="email" class="textbox" @bind=admin.Email>
            <label class="input-label" for="email">E-pošta</label>
            <br>
            <input type="text" id="phonenumber" class="textbox" @bind=admin.PhoneNumber>
            <label class="input-label" for="phonenumber">Telefonska številka</label>
            <br>
            <input type="text" id="username" class="textbox" @bind=admin.Username>
            <label class="input-label" for="username">Uporabniško ime</label>
            <br>
            <input type="text" id="password" class="textbox" @bind=admin.Password>
            <label class="input-label" for="password">Geslo</label>
            <br>

            <select class="textbox" @bind=school.Name id="school">
                @foreach (var school in schools)
                {
                    if (school.Id == admin.SchoolId)
                    {
                        <option selected>@school.Name</option>
                    }
                    else
                    {
                        <option>@school.Name</option>
                    }
                }
            </select>
            <label class="input-label" for="school">Šola</label>
            <button type="submit" class="login-button">Ustvari</button>
        </form>
    </div>
</div>

@code
{
    [Parameter]
    public string adminId { get; set; }

    Admin admin = new Admin();
    School school = new School();
    List<Admin> admins = new List<Admin>();
    List<School> schools = new List<School>();

    protected override async Task OnInitializedAsync()
    {
        schools = await schoolservice.GetAllSchools();

        if (adminId == "0")
        {
            admin = new Admin();
        }
        else
        {
            admins = await adminservice.GetAllAdmins();

            admin = admins.FirstOrDefault(varadmin => varadmin.Id == Int32.Parse(adminId.ToString()));
        }
    }

    public async void CheckSubmit()
    {
        if (adminId == "0")
        {
            admin.SchoolId = schools.FirstOrDefault(varschool => varschool.Name == school.Name).Id;

            await adminservice.AddNewAdmin(admin);

            admin = new Admin();

            NavManager.NavigateTo("Master/Sub-admins");
        }
        else
        {
            admin.SchoolId = schools.FirstOrDefault(varschool => varschool.Name == school.Name).Id;

            await adminservice.UpdateAdmin(admin);
            admin = new Admin();

            NavManager.NavigateTo("Master/Sub-admins");
        }
    }
}