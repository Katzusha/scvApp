@page "/Master/Sub-admins";

@inject NavigationManager NavManager;
@inject IJSRuntime JsRuntime;

@inject Services.IAdminService adminservice;
@inject Services.ISchoolService schoolservice;

@using Models

<nav class="navbar-master">
    <div class="container">
        <a href="/Master/All-dates" class="left-button"><div style="margin-top: 12px;">VSI<br />DATUMI</div></a>
        <a class="welcome-container">POD ADMINI</a>
    </div>
</nav>

<div class="fullscreen" style="background-color: #ed1164">
    <div class="fullscreen-table">
        <table>
            <tr>
                <th style="width: calc(100% / 5);">IME IN PRIIMEK</th>
                <th style="width: calc(100% / 5);">NAZIV</th>
                <th style="width: calc(100% / 5);">E-POŠTA</th>
                <th style="width: calc((100% / 5) * 2);">ŠOLA</th>
            </tr>
            <tr>
                <td colspan="4"><a class="add-button" @onclick="CreateAdminRow">NOV UPORABNIK</a></td>
            </tr>
            
            @foreach (var admin in admins)
            {
                if (admin.isMasterAdmin != true)
                {
                    <tr class="td-row" @onclick="(() => EditAdminRow(admin.Email))">
                        <td><p style="border-radius: 15px 0px 0px 15px;">@admin.Firstname.ToString() @admin.Surname.ToString()</p></td>
                        <td><p>@admin.Title</p></td>
                        <td><p>@admin.Email.ToString()</p></td>
                        <td><p style="border-radius: 0px 15px 15px 0px;">@schools.FirstOrDefault(school => school.Id == admin.SchoolId).Name</p></td>
                    </tr>
                }
            }

        </table>
    </div>
</div>

@code
{
    List<Admin> admins = new List<Admin>();
    List<School> schools = new List<School>();

    public string adminId = "0";
    protected override async Task OnInitializedAsync()
    {
        schools = await schoolservice.GetAllSchools();
        admins = await adminservice.GetAllAdmins();
    }

    public async void CreateAdminRow()
    {
        NavManager.NavigateTo($"/Create-user/{adminId}");
    }

    public async void EditAdminRow(string email)
    {
        adminId = admins.FirstOrDefault(varadmin => varadmin.Email == email).Id.ToString();

        NavManager.NavigateTo($"/Create-user/{adminId}");
    }
}