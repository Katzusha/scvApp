@page "/";

@inject NavigationManager NavManager;
@inject IJSRuntime JsRuntime;

@inject Services.ISubmitService submitservice;
@inject Services.ISchoolService schoolservice;
@inject Services.ISchoolSubmitService schoolsubmitservice;
@inject Services.IDateService dateservice;
@using Models;

<nav class="navbar-master">
    <div class="container">
        <a href="/" style="height: 100px; float: left;">
            <img src="https://www.scv.si/wp-content/themes/yoo_master2_wp/images/scv.svg" style="height: 100px; float: left; position: absolute; left: 0px; text-decoration: none;" />
        </a>
        <a href="/MasterLogIn" class="welcome-container">DOBRODOŠLI</a>
    </div>
</nav>

<div class="fullscreen" style="background-color: #ed1164">
    <div class="client-form">
        <form onsubmit="@CheckSubmit" style="margin-bottom: -80px;">
            <table style="width: 100%;">
                <tr>
                    <td class="left-td-client">
                        <input type="text" id="firstname" class="textbox" @bind="submit.Firstname" required />
                        <label class="input-label" for="firstname">Ime</label>
                        <br />
                        <input type="text" id="surname" class="textbox" @bind="submit.Surname" required/>
                        <label class="input-label" for="surname">Priimek</label>
                        <br />
                        <input type="email" id="email" class="textbox" @bind="submit.Email" required/>
                        <label class="input-label" for="email">E-pošta</label>
                        <br />
                        <input type="text" id="phonenumber" class="textbox" @bind="submit.PhoneNumber" required />
                        <label class="input-label" for="phonenumber">Telefonska številka</label>
                        <br />
                        <input type="text" id="schooltitle" class="textbox" @bind="submit.SchoolTitle" required />
                        <label class="input-label" for="schooltitle">Naziv šole</label>
                        <br />
                        <input type="text" id="address" class="textbox" @bind="submit.Address" required />
                        <label class="input-label" for="address">Naslov šole</label>
                    </td>
                    <td class="right-td-client">
                        <select type="number" class="textbox" id="classlevel" min="5" max="9" @bind="submit.Class" required >
                            <option>5</option>
                            <option>6</option>
                            <option>7</option>
                            <option>8</option>
                            <option>9</option>
                        </select>

                        <label class="input-label" for="classlevel">Razredna stopnja</label>
                        <br />
                        <table>
                            <tr>
                                <td style="width: 90%;">
                                    <select class="textbox" id="term" @bind="date.Term" required>
                                        @foreach (var vardate in dates.OrderBy(vardate => vardate.Term).ToList())
                                        {
                                            if (submits.Any(submit => submit.Date == date.Id) == false)
                                            {
                                                <option>@vardate.Term</option>
                                            }
                                        }
                                    </select>
                                    <label class="input-label" for="term">Termin</label>
                                </td>
                                <td style="width: 10%;">
                                    <button type="button" style="height: 50px; width: 50px; border-radius: 5px; background-color: rgba(0, 0, 0, 0.2); border: 0px transparent; cursor: default; color: white; font-size: 24px; cursor: pointer; margin-top: -10px;" onclick="@SelectedDate">
                                        ⁐
                                    </button>
                                </td>
                            </tr>
                        </table>

                        <br />
                        <input type="number" id="numberofstudents" max="@maxnumberofstudents" min="0" class="textbox" @bind="submit.NumberOfStudents" required />
                        <label class="input-label" for="numberofstudents">Število učencev</label>
                        <table style="width:100%;">
                            <tr>
                                <td>
                                    <input type="time" class="textbox" id="start" required @bind="submit.Start" readonly/>
                                    <label class="input-label" for="start">Začetek</label>
                                </td>
                                <td>
                                    <input type="time" class="textbox" id="end" required @bind="submit.End" readonly/>
                                    <label class="input-label" for="end">Konec</label>
                                </td>
                            </tr>
                        </table>
                        <input type="time" class="textbox" id="break" @bind="submit.Break" readonly/>
                        <label class="input-label" for="break">Odmor</label>
                        <br />
                    </td>
                    <td class="right-td-client" style="width: 30%;">
                        <div style="margin: 0 auto; text-align: center;">
                            <button class="school-button-client" style="background-color: #a9d046;" type="button" @onclick="SSGO_Click">
                                <img src="https://www.scv.si/wp-content/themes/yoo_master2_wp/images/ssgo.svg"><div>@ssgo</div>
                            </button>
                            <button class="school-button-client" style="background-color: #0094d9;" type="button" @onclick="ERS_Click">
                                <img src="https://www.scv.si/wp-content/themes/yoo_master2_wp/images/ers.svg"><div>@ers</div>
                            </button>

                            <br />
                            <button class="school-button-client" style="background-color: #ee5ba0;" type="button" @onclick="SSD_Click">
                                <img src="https://www.scv.si/wp-content/themes/yoo_master2_wp/images/ssd.svg"><div>@ssd</div>
                            </button><button class="school-button-client" style="background-color: #ffca05;" type="button" @onclick="GIM_Click">
                                <img src="https://www.scv.si/wp-content/themes/yoo_master2_wp/images/gim.svg"><div>@gim</div>
                            </button>

                            <br />
                            <button class="school-button-client-all" style="background-color: rgba(0, 0, 0, 0.2);" type="button" @onclick="All_Click">
                                VSE
                            </button>
                            <br />
                            <select class="textbox" id="type" @bind="submit.Type" style="margin-top: 10px;" required>
                                <option>ŠCV</option>
                                <option>MIC</option>
                                <option>Obisk OŠ</option>
                            </select>
                            <label class="input-label" for="type">Lokacija ogleda</label>
                        </div>
                    </td>
                </tr>
            </table>
            <textarea style="height: 100px; resize: none;" class="textbox" id="note" @bind="submit.Note"></textarea>
            <label class="input-label" for="note" style="margin-top: -125px;">Opomba</label>
            <button type="submit" class="login-button-client" formaction="/Thank-you">ODDAJ</button>
        </form>
    </div>
</div>

@code {
    string numberofstudents;
    int maxnumberofstudents = 0;

    Date date = new Date();
    SchoolSubmit schoolsubmit = new SchoolSubmit();
    List<Date> dates = new List<Date>();
    List<Submit> submits = new List<Submit>();
    List<School> schools = new List<School>();
    protected override async Task OnInitializedAsync()
    {
        dates = await dateservice.GetAllDates();
        submits = await submitservice.GetAllSubmits();

        schools = await schoolservice.GetAllSchools();
    }

    public void UpdateMaxNumberOfStudents()
    {
        date = dates.FirstOrDefault(vardate => vardate.Term == date.Term);
        maxnumberofstudents = date.MaxNumberOfStudents;

        JsRuntime.InvokeVoidAsync("alert", maxnumberofstudents.ToString());
    }

    string ssgo = "";
    private void SSGO_Click(object sender)
    {
        if (ssgo == "")
        {
            ssgo = "✔";
        }
        else
        {
            ssgo = "";
        }
    }

    string ers = "";
    private void ERS_Click(object sender)
    {
        if (ers == "")
        {
            ers = "✔";
        }
        else
        {
            ers = "";
        }
    }

    string ssd = "";
    private void SSD_Click(object sender)
    {
        if (ssd == "")
        {
            ssd = "✔";
        }
        else
        {
            ssd = "";
        }
    }

    string gim = "";
    private void GIM_Click(object sender)
    {
        if (gim == "")
        {
            gim = "✔";
        }
        else
        {
            gim = "";
        }
    }

    private void All_Click(object sender)
    {
        if (ssgo == "" || ers == "" || ssd == "" || gim == "")
        {
            ssgo = "✔";
            ers = "✔";
            ssd = "✔";
            gim = "✔";
        }
        else
        {
            ssgo = "";
            ers = "";
            ssd = "";
            gim = "";
        }
    }

    Submit submit = new Submit();
    public async Task CheckSubmit()
    {
        if (ssgo != "" || ers != "" || ssd != "" || gim != "")
        {
            try
            {
                date = dates.FirstOrDefault(vardate => vardate.Term == date.Term);

                submit.Date = date.Id;

                if(submit.Note == null)
                {
                    submit.Note = "";
                }

                await submitservice.AddNewSubmit(submit);

                if (ssgo != "")
                {
                    schoolsubmit.SubmitId = submit.Id;
                    schoolsubmit.SchoolId = 3;

                    await schoolsubmitservice.AddNewSchoolSubmit(schoolsubmit);
                    schoolsubmit = new SchoolSubmit();
                }
                if (ers != "")
                {
                    schoolsubmit.SubmitId = submit.Id;
                    schoolsubmit.SchoolId = 1;

                    await schoolsubmitservice.AddNewSchoolSubmit(schoolsubmit);
                    schoolsubmit = new SchoolSubmit();
                }
                if (ssd != "")
                {
                    schoolsubmit.SubmitId = submit.Id;
                    schoolsubmit.SchoolId = 4;

                    await schoolsubmitservice.AddNewSchoolSubmit(schoolsubmit);
                    schoolsubmit = new SchoolSubmit();
                }
                if (gim != "")
                {
                    schoolsubmit.SubmitId = submit.Id;
                    schoolsubmit.SchoolId = 2;

                    await schoolsubmitservice.AddNewSchoolSubmit(schoolsubmit);
                    schoolsubmit = new SchoolSubmit();
                }

                submit = new Submit();

                NavManager.NavigateTo("/Thank-you");
            }
            catch (Exception ex)
            {
                await JsRuntime.InvokeVoidAsync("alert", ex.InnerException.Message);
            }
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("alert", "Please check at least one of the schools!");
        }
    }

    public void SelectedDate()
    {
        int id = dates.FirstOrDefault(vardate => vardate.Term == date.Term).Id;

        maxnumberofstudents = Int32.Parse(dates.FirstOrDefault(vardate => vardate.Id == id).MaxNumberOfStudents.ToString());

        submit.Start = dates.FirstOrDefault(vardate => vardate.Id == id).Start;

    }
}